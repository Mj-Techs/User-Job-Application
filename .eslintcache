[{"/home/stark/REACT-LEVEL2/user-job-application/src/JobApplication.js":"1","/home/stark/REACT-LEVEL2/user-job-application/src/JobTitleInfo.js":"2","/home/stark/REACT-LEVEL2/user-job-application/src/index.js":"3","/home/stark/REACT-LEVEL2/user-job-application/src/AdminPage.js":"4","/home/stark/REACT-LEVEL2/user-job-application/src/App.js":"5","/home/stark/REACT-LEVEL2/user-job-application/src/UserDetail.js":"6","/home/stark/REACT-LEVEL2/user-job-application/src/UserInfo.js":"7","/home/stark/REACT-LEVEL2/user-job-application/src/JobForm.js":"8","/home/stark/REACT-LEVEL2/user-job-application/src/Header.jsx":"9","/home/stark/REACT-LEVEL2/user-job-application/src/Home.js":"10"},{"size":189,"mtime":1607978865761,"results":"11","hashOfConfig":"12"},{"size":4247,"mtime":1608021088971,"results":"13","hashOfConfig":"12"},{"size":288,"mtime":1608193204815,"results":"14","hashOfConfig":"12"},{"size":1361,"mtime":1608214453722,"results":"15","hashOfConfig":"12"},{"size":1190,"mtime":1608023567188,"results":"16","hashOfConfig":"12"},{"size":1822,"mtime":1606482411011,"results":"17","hashOfConfig":"12"},{"size":1517,"mtime":1608214383888,"results":"18","hashOfConfig":"12"},{"size":3480,"mtime":1608204839390,"results":"19","hashOfConfig":"12"},{"size":930,"mtime":1608205148742,"results":"20","hashOfConfig":"12"},{"size":1230,"mtime":1608204118563,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ocepi1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/stark/REACT-LEVEL2/user-job-application/src/JobApplication.js",[],["45","46"],"/home/stark/REACT-LEVEL2/user-job-application/src/JobTitleInfo.js",[],["47","48"],"/home/stark/REACT-LEVEL2/user-job-application/src/index.js",[],"/home/stark/REACT-LEVEL2/user-job-application/src/AdminPage.js",[],"/home/stark/REACT-LEVEL2/user-job-application/src/App.js",[],"/home/stark/REACT-LEVEL2/user-job-application/src/UserDetail.js",[],"/home/stark/REACT-LEVEL2/user-job-application/src/UserInfo.js",[],"/home/stark/REACT-LEVEL2/user-job-application/src/JobForm.js",["49","50","51"],"import React, { useEffect } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./JobForm.css\";\n\nconst title = [\n  \"Front-End Developer\",\n  \"Node.js Developer\",\n  \"MEAN Stack Developer\",\n  \"FULL Stack Developer\",\n];\nconst JobForm = (props) => {\n  const { isSaved, toggleIsSaved, formSubmission } = props;\n  // useEffect(() => {\n  //   if (isSaved) {\n  //     toggleIsSaved();\n  //   }\n  // }, [toggleIsSaved, isSaved]);\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    jobTitle: \"\",\n    experience: \"\",\n    skills: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n    phone: Yup.string().required(\"Required\"),\n    jobTitle: Yup.string().required(\"Required\"),\n    experience: Yup.string().required(\"Required\"),\n    skills: Yup.string().required(\"Required\"),\n  });\n  const onSubmit = (values, onSubmitProps) => {\n    // console.log(\"form data\", values);\n    formSubmission(values);\n    onSubmitProps.resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form>\n          <label htmlFor=\"Fullname\">Fullname</label>\n          <Field id=\"fullName\" name=\"name\" type=\"text\" />\n          <ErrorMessage name=\"name\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <label htmlFor=\"email\">Email address</label>\n          <Field id=\"email\" name=\"email\" type=\"email\" />{\" \"}\n          <ErrorMessage name=\"email\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <label htmlFor=\"phone\">Contact Number</label>\n          <Field id=\"phone\" name=\"phone\" type=\"text\" />{\" \"}\n          <ErrorMessage name=\"phone\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <label htmlFor=\"jobTitle\">Applying for job</label>\n          <Field as=\"select\" id=\"jobTitle\" name=\"jobTitle\">\n            <option value=\"\">----Select----</option>\n            {title.map((tit, i) => {\n              return (\n                <option value={tit} key={i}>\n                  {tit}\n                </option>\n              );\n            })}\n          </Field>\n          <ErrorMessage name=\"jobTitle\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <label htmlFor=\"experience\">Experience</label>\n          <Field\n            id=\"experience\"\n            name=\"experience\"\n            type=\"text\"\n            placeholder=\"Experience(2 years 3 months)\"\n          />\n          <ErrorMessage name=\"experience\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <label htmlFor=\"skills\">Technical Skills</label>\n          <Field as=\"textarea\" id=\"skills\" name=\"skills\" />\n          <ErrorMessage name=\"skills\">\n            {(errmsg) => <div style={{ color: \"red\" }}>{errmsg}</div>}\n          </ErrorMessage>\n          <hr />\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\nexport default JobForm;\n","/home/stark/REACT-LEVEL2/user-job-application/src/Header.jsx",[],"/home/stark/REACT-LEVEL2/user-job-application/src/Home.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":13,"column":11,"nodeType":"60","messageId":"61","endLine":13,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":13,"column":20,"nodeType":"60","messageId":"61","endLine":13,"endColumn":33},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isSaved' is assigned a value but never used.","'toggleIsSaved' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]